class Solution {
    public int maxSubArray(int[] nums) {
        if(nums.length <=0 || nums.length ==1) {
            return nums[0];
        }
        int maxSoFar = nums[0], currMax = nums[0];

        for(int i=1; i<nums.length; i++) {
            currMax = Math.max(nums[i], nums[i]+currMax);
            maxSoFar = Math.max(currMax, maxSoFar);
        }
        return maxSoFar;
    }
}


Example 1:

Input: nums = [-2,1,-3,4,-1,2,1,-5,4]
Output: 6
Explanation: The subarray [4,-1,2,1] has the largest sum 6.
Example 2:

Input: nums = [1]
Output: 1
Explanation: The subarray [1] has the largest sum 1.
Example 3:

Input: nums = [5,4,-1,7,8]
Output: 23
Explanation: The subarray [5,4,-1,7,8] has the largest sum 23.