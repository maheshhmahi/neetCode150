class Solution {
    public int trap(int[] height) {
        if(height == null) 
            return 0;
        int l=0, r=height.length-1;
        int leftMax=height[0], rightMax = height[height.length-1];
        int res = 0;
        while(l<r) {
            if(leftMax <= rightMax) {
                l++;
                leftMax = Math.max(leftMax, height[l]);
                res += leftMax-height[l];
            }
            else {
                r--;
                rightMax = Math.max(rightMax, height[r]);
                res += rightMax-height[r];
            }
        }
        return res;
    }
}


Example 1:

Input: height = [0,1,0,2,1,0,1,3,2,1,2,1]
Output: 6
Explanation: The above elevation map (black section) is represented by array [0,1,0,2,1,0,1,3,2,1,2,1]. In this case, 6 units of rain water (blue section) are being trapped.


Example 2:

Input: height = [4,2,0,3,2,5]
Output: 9