class Solution {
    public int[] twoSum(int[] numbers, int target) {
        int l = 0, r = numbers.length - 1; 
        int res[] = new int[2];
        while(l<=r) {
            int sum = numbers[l] + numbers[r];
            System.out.println("Sum : " + sum);
            if(sum == target) {
                res[0] = l+1;
                res[1] = r+1;
                return res;
            }
            if(sum > target) 
                r--;
            else 
                l++;
        }
        return res;
    }
}


// Sorted so make use of the sorted values for your logic

Example 1:

Input: numbers = [2,7,11,15], target = 9
Output: [1,2]
Explanation: The sum of 2 and 7 is 9. Therefore, index1 = 1, index2 = 2. We return [1, 2].
Example 2:

Input: numbers = [2,3,4], target = 6
Output: [1,3]
Explanation: The sum of 2 and 4 is 6. Therefore index1 = 1, index2 = 3. We return [1, 3].
Example 3:

Input: numbers = [-1,0], target = -1
Output: [1,2]
Explanation: The sum of -1 and 0 is -1. Therefore index1 = 1, index2 = 2. We return [1, 2].