/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode removeNthFromEnd(ListNode head, int n) {
        int count = 0;
        if(head == null) {
            return null;
        }
        ListNode temp = head;
        ListNode prev = head;
        while(temp != null) {
            count += 1;
            temp = temp.next;
        }
        if(count == n) {
            return head.next;
        }
        System.out.println("Count " + count);
        temp = head;
        count = count - n;
        while(count > 0) {
            count--;
            prev = temp;
            temp = temp.next;
        }
        prev.next = temp.next;
        temp.next = null;
        return head;
    }
}


Example 1:

Input: head = [1,2,3,4,5], n = 2
Output: [1,2,3,5]

Example 2:

Input: head = [1], n = 1
Output: []
Example 3:

Input: head = [1,2], n = 1
Output: [1]